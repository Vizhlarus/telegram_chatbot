from aiogram import Router, types
from aiogram.filters import CommandStart
from database.db import save_user, save_message, users_collection, messages_collection

router = Router()  # –†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥

@router.message(CommandStart())
async def start_command(message: types.Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n\n"
        "–Ø —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –∫–∞—Ä–º—É, –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã. üéâ\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞ üìä\n"
        "/topkarma ‚Äî —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–∞—Ä–º–µ üèÜ\n"
        "/quiz ‚Äî –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üéì\n"
        "/anecdote ‚Äî —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç üòÇ\n"
        "/talk ‚Äî –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–æ—Ç–æ–º üí¨\n"
    )

@router.message()
async def handle_message(message: types.Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –æ–Ω –Ω–æ–≤—ã–π)
    await save_user(
        user_id=message.from_user.id,
        username=message.from_user.username,
        full_name=message.from_user.full_name
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É
    await save_message(
        user_id=message.from_user.id,
        text=message.text
    )

    @router.message(commands=["stats"])
    async def stats_command(message: types.Message):
        chat_id = message.chat.id

        # –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
        total_messages = await messages_collection.count_documents({})

        # –¢–æ–ø-5 –±–æ–ª—Ç—É–Ω–æ–≤ (—Å–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ)
        top_chatters = users_collection.find().sort("messages_count", -1).limit(5)
        top_chatters_list = [
            f"ü•á {user['full_name']} (@{user['username']}) ‚Äî {user['messages_count']} —Å–æ–æ–±—â–µ–Ω–∏–π"
            async for user in top_chatters
        ]

        # –¢–æ–ø-5 –º–æ–ª—á—É–Ω–æ–≤ (—Å–∞–º—ã–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
        top_silent = users_collection.find().sort("messages_count", 1).limit(5)
        top_silent_list = [
            f"üîá {user['full_name']} (@{user['username']}) ‚Äî {user['messages_count']} —Å–æ–æ–±—â–µ–Ω–∏–π"
            async for user in top_silent
        ]

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
        stats_message = (
                f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞**:\n\n"
                f"üì© –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}\n\n"
                f"üí¨ **–¢–æ–ø-5 –∞–∫—Ç–∏–≤–Ω—ã—Ö**:\n" + "\n".join(top_chatters_list) + "\n\n"
                                                                            f"üò∂ **–¢–æ–ø-5 –º–æ–ª—á—É–Ω–æ–≤**:\n" + "\n".join(
            top_silent_list)
        )

        await message.answer(stats_message, parse_mode="Markdown")