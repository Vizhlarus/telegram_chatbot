from aiogram import Router, types
from aiogram.filters import Command
from database.db import users_collection, messages_collection  # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç

router = Router()  # –†–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥

@router.message(Command("stats"))  # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –≤ aiogram 3.x
async def stats_command(message: types.Message):
    # –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    total_messages = await messages_collection.count_documents({})

    # –¢–æ–ø-5 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–±–æ–ª—Ç—É–Ω—ã)
    top_chatters_cursor = users_collection.find().sort("messages_count", -1).limit(5)
    top_chatters_list = [
        f"ü•á {user['full_name']} (@{user['username']}) ‚Äî {user['messages_count']} —Å–æ–æ–±—â–µ–Ω–∏–π"
        async for user in top_chatters_cursor
    ]

    # –¢–æ–ø-5 –º–æ–ª—á—É–Ω–æ–≤ (–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
    top_silent_cursor = users_collection.find().sort("messages_count", 1).limit(5)
    top_silent_list = [
        f"üîá {user['full_name']} (@{user['username']}) ‚Äî {user['messages_count']} —Å–æ–æ–±—â–µ–Ω–∏–π"
        async for user in top_silent_cursor
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    stats_message = (
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞**:\n\n"
        f"üì© –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}\n\n"
        f"üí¨ **–¢–æ–ø-5 –∞–∫—Ç–∏–≤–Ω—ã—Ö**:\n" + "\n".join(top_chatters_list) + "\n\n"
        f"üò∂ **–¢–æ–ø-5 –º–æ–ª—á—É–Ω–æ–≤**:\n" + "\n".join(top_silent_list)
    )

    await message.answer(stats_message, parse_mode="Markdown")